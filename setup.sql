USE ROLE ACCOUNTADMIN;
--Create environment
CREATE DATABASE SPCS_PLAYGROUND;

CREATE COMPUTE POOL STREAMLIT
  MIN_NODES = 1
  MAX_NODES = 1
  INSTANCE_FAMILY = CPU_X64_XS;

SHOW COMPUTE POOLS;

CREATE WAREHOUSE IF NOT EXISTS AWH_XSMALL;

--Create role and assign privileges
CREATE ROLE SPCS_SERVICE_ROLE;
GRANT USAGE, MONITOR ON COMPUTE POOL STREAMLIT TO ROLE SPCS_SERVICE_ROLE;
GRANT BIND SERVICE ENDPOINT ON ACCOUNT TO ROLE SPCS_SERVICE_ROLE;
GRANT USAGE ON DATABASE SPCS_PLAYGROUND TO ROLE SPCS_SERVICE_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA PUBLIC TO ROLE SPCS_SERVICE_ROLE;
GRANT USAGE ON WAREHOUSE AWH_XSMALL TO ROLE SPCS_SERVICE_ROLE;

USE ROLE SPCS_SERVICE_ROLE;

--Create Image Repository for Container Images
CREATE IMAGE REPOSITORY IF NOT EXISTS SPCS_PLAYGROUND.PUBLIC.IMAGES;
--Note Image Repository URL
SHOW IMAGE REPOSITORIES IN SCHEMA SPCS_PLAYGROUND.PUBLIC;
CREATE STAGE IF NOT EXISTS SPCS_PLAYGROUND.PUBLIC.SPECS DIRECTORY = (ENABLE = true);

--Tag & Push Image and Spec File

--Create Table to read from
CREATE TABLE SERVICE_USERS (
USER_ID NUMBER(38,0),
USER_NAME VARCHAR
);

INSERT INTO SERVICE_USERS (USER_ID, USER_NAME) VALUES (1,'BWILLIS');

----------STOP HERE------------

--Confirm image successfully pushed
SHOW IMAGES IN IMAGE REPOSITORY SPCS_PLAYGROUND.PUBLIC.IMAGES;

--Create Service
CREATE SERVICE SPCS_PLAYGROUND.PUBLIC.STREAMLIT
IN COMPUTE POOL STREAMLIT
FROM @SPCS_PLAYGROUND.PUBLIC.SPECS
SPEC = 'streamlit.yaml';

--Check Service Status and Get Endpoints
DESCRIBE SERVICE SPCS_PLAYGROUND.PUBLIC.STREAMLIT;
SELECT SYSTEM$GET_SERVICE_STATUS('SPCS_PLAYGROUND.PUBLIC.STREAMLIT');
SHOW ENDPOINTS IN SERVICE SPCS_PLAYGROUND.PUBLIC.STREAMLIT;
SELECT SYSTEM$GET_SERVICE_LOGS('SPCS_PLAYGROUND.PUBLIC.STREAMLIT', 0, 'streamlit', 10);

--Suspend Service & Compute Pools (Compute Pool Auto-Suspends)
ALTER SERVICE SPCS_PLAYGROUND.PUBLIC.STREAMLIT SUSPEND;
ALTER COMPUTE POOL STREAMLIT SUSPEND;